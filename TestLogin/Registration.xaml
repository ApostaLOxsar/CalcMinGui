<Page x:Class="TestLogin.Registration"
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:TestLogin"
      xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
      xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
      mc:Ignorable="d" 

      Title="Registration">

    <Page.Resources>
        <Style x:Key="FocusVisual">
        </Style>
        <Style x:Key="ButtonWithRound" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="16,4,16,4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <AdornerDecorator CacheMode="{Binding (wpf:ShadowAssist.CacheMode), RelativeSource={RelativeSource Mode=Self}}">
                                <Grid>
                                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10" Effect="{Binding (wpf:ElevationAssist.Elevation), Converter={x:Static converters:ShadowConverter.Instance}, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                    <ProgressBar x:Name="ProgressBar" Background="{Binding (wpf:ButtonProgressAssist.IndicatorBackground), RelativeSource={RelativeSource Mode=TemplatedParent}}" BorderBrush="{Binding (wpf:ButtonProgressAssist.IndicatorBackground), RelativeSource={RelativeSource Mode=TemplatedParent}}" Foreground="{Binding (wpf:ButtonProgressAssist.IndicatorForeground), RelativeSource={RelativeSource Mode=TemplatedParent}}" HorizontalAlignment="Left" Height="{TemplateBinding Height}" IsIndeterminate="{Binding (wpf:ButtonProgressAssist.IsIndeterminate), RelativeSource={RelativeSource Mode=TemplatedParent}}" Maximum="{Binding (wpf:ButtonProgressAssist.Maximum), RelativeSource={RelativeSource Mode=TemplatedParent}}" Minimum="{Binding (wpf:ButtonProgressAssist.Minimum), RelativeSource={RelativeSource Mode=TemplatedParent}}" Opacity="{Binding (wpf:ButtonProgressAssist.Opacity), RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{DynamicResource MaterialDesignLinearProgressBar}" Value="{Binding (wpf:ButtonProgressAssist.Value), RelativeSource={RelativeSource Mode=TemplatedParent}}" VerticalAlignment="Center" Visibility="{Binding (wpf:ButtonProgressAssist.IsIndicatorVisible), Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource Mode=TemplatedParent}}" Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}, Mode=FindAncestor}}">
                                        <ProgressBar.Clip>
                                            <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                                <Binding ElementName="border" Path="ActualWidth"/>
                                                <Binding ElementName="border" Path="ActualHeight"/>
                                                <Binding ElementName="border" Path="CornerRadius"/>
                                                <Binding ElementName="border" Path="BorderThickness"/>
                                            </MultiBinding>
                                        </ProgressBar.Clip>
                                    </ProgressBar>
                                </Grid>
                            </AdornerDecorator>
                            <wpf:Ripple ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Focusable="False" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                <wpf:Ripple.Clip>
                                    <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                        <Binding ElementName="border" Path="ActualWidth"/>
                                        <Binding ElementName="border" Path="ActualHeight"/>
                                        <Binding ElementName="border" Path="CornerRadius"/>
                                        <Binding ElementName="border" Path="BorderThickness"/>
                                    </MultiBinding>
                                </wpf:Ripple.Clip>
                            </wpf:Ripple>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="wpf:ShadowAssist.Darken" TargetName="border" Value="True"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="wpf:ShadowAssist.Darken" TargetName="border" Value="True"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value="0.38"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="TextBlock.FontSize" Value="14"/>
            <Setter Property="TextBlock.FontWeight" Value="Medium"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="wpf:ButtonAssist.CornerRadius" Value="2"/>
            <Setter Property="wpf:ButtonProgressAssist.IndicatorBackground" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="wpf:ButtonProgressAssist.IndicatorForeground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
            <Setter Property="wpf:ButtonProgressAssist.IsIndicatorVisible" Value="False"/>
            <Setter Property="wpf:ButtonProgressAssist.Opacity" Value=".4"/>
            <Setter Property="wpf:ElevationAssist.Elevation" Value="Dp2"/>
            <Setter Property="wpf:RippleAssist.Feedback" Value="White"/>
        </Style>
    </Page.Resources>


    <Grid Background="#ffdadada">
        <Border Background="WhiteSmoke" Margin="10" MinHeight="50" MaxHeight="450" MinWidth="150" MaxWidth="700" VerticalAlignment="Center" Padding="10" CornerRadius="20">
            <Border.Effect>
                <DropShadowEffect BlurRadius="30" Color="LightBlue" ShadowDepth="0"/>
            </Border.Effect>
            <StackPanel>
                <TextBlock Text="Test text" FontSize="30" HorizontalAlignment="Center" FontWeight="Bold" FontStyle="Italic" x:Name="textForRootPage"/>

                <Grid Margin="0,0,0,10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Border Grid.ColumnSpan="2" x:Name="loginBorder" Background="#07eff7" Opacity="0.7" Height="30" CornerRadius="20" Margin="10,0,10,0" Padding="0,0,0,0" MinWidth="150" MaxWidth="700">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="10" Color="LightBlue" ShadowDepth="5"/>
                        </Border.Effect>
                    </Border>
                    <TextBlock x:Name="LoginText" Grid.Column="0" Text="Логин" Padding="0,5,0,0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    <TextBox Grid.Column="1" x:Name="LoginTextBox" materialDesign:HintAssist.Hint="   Не менее 5 симовлов" MinWidth="50" MaxWidth="900" Margin="0,0,20,5" Padding="0,0,0,0" VerticalAlignment="Center" Style="{StaticResource MaterialDesignFloatingHintTextBox}" VerticalContentAlignment="Stretch">
                    </TextBox>

                </Grid>

                <Grid Margin="0,0,0,10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Border Grid.ColumnSpan="2" Background="#07eff7" Opacity="0.7" Height="30" CornerRadius="20" Margin="10,0,10,0" Padding="0,0,0,0" MinWidth="150" MaxWidth="700">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="10" Color="LightBlue" ShadowDepth="5"/>
                        </Border.Effect>
                    </Border>
                    <TextBlock Grid.Column="0" Text="Пароль" Padding="0,5,0,0" VerticalAlignment="Center" HorizontalAlignment="{Binding ElementName=LoginText, Path=HorizontalAlignment}"/>
                    <PasswordBox Grid.Column="1" x:Name="PasswordTextBox" materialDesign:HintAssist.Hint="   Пароль должен содержать латинские буквы и цифры" Padding="{Binding ElementName=LoginTextBox, Path=Padding, Mode=TwoWay}" Margin="{Binding ElementName=LoginTextBox, Path=Margin, Mode=TwoWay}" MinWidth="50" MaxWidth="900" VerticalAlignment="Center" Style="{StaticResource MaterialDesignFloatingHintRevealPasswordBox}"/>
                    </Grid>

               

                <Grid Margin="0,0,0,10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Border Grid.ColumnSpan="2" Background="#07eff7" Opacity="0.7" Height="30" CornerRadius="20" Margin="10,0,10,0" Padding="0,0,0,0" MinWidth="150" MaxWidth="700">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="10" Color="LightBlue" ShadowDepth="5"/>
                        </Border.Effect>
                    </Border>
                    <TextBlock Grid.Column="0" Text="Повторите пароль" Padding="0,5,0,0" VerticalAlignment="Center" HorizontalAlignment="{Binding ElementName=LoginText, Path=HorizontalAlignment}"/>
                    <PasswordBox Grid.Column="1" x:Name="PasswordRepeatTextBox" materialDesign:HintAssist.Hint="   Повторите пароль" Padding="{Binding ElementName=LoginTextBox, Path=Padding, Mode=TwoWay}" Margin="{Binding ElementName=LoginTextBox, Path=Margin, Mode=TwoWay}" MinWidth="50" MaxWidth="900" VerticalAlignment="Center" Style="{StaticResource MaterialDesignFloatingHintRevealPasswordBox}"/>
                </Grid>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0" Style="{DynamicResource ButtonWithRound}" Content="Назад" HorizontalAlignment="Center" Width="200" Click="ButtonLogin_Click" IsCancel="True"/>
                    <Button Grid.Column="1" Style="{DynamicResource ButtonWithRound}" Content="Зарегистрироваться" HorizontalAlignment="Center" Width="200" Click="ButtonRegistration_Click" IsDefault="True"/>
                </Grid>
            </StackPanel>
        </Border>

    </Grid>
</Page>
